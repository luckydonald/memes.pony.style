// Generated by CoffeeScript 1.9.1
window.SubmitView = Backbone.View.extend({
  el: "#content",
  initialize: function() {
    this.title = "Submit Images - MyLittleFaceWhen";
    this.descripition = "Upload more images to the service";
    return this.template = _.template(tpl.get("submit"));
  },
  events: {
    "dragover #dropzone": "handleDragover",
    "drop #dropzone": "handleDrop",
    "change #files": "handleChoose",
    "click #upload": "upload",
    "click #instructions button": "toggleInstructions",
    "click #to-unreviewed a": "navigateAnchor",
    "keydown input": "disableShortcuts",
    "keyup input": "disableShortcuts"
  },
  render: function() {
    this.updateMeta();
    $(this.el).html(this.template({
      static_prefix: static_prefix
    }));
    return this;
  },
  handleChoose: function(event) {
    return this.handleFiles(event.target.files);
  },
  handleDragover: function(event) {
    event = event.originalEvent;
    event.stopPropagation();
    event.preventDefault();
    return event.dataTransfer.dropEffect = "copy";
  },
  handleDrop: function(event) {
    event = event.originalEvent;
    event.stopPropagation();
    event.preventDefault();
    return this.handleFiles(event.dataTransfer.files);
  },
  handleFiles: function(files) {
    var file, i, len, thumbs, updates;
    updates = [];
    for (i = 0, len = files.length; i < len; i++) {
      file = files[i];
      if (file.type.match("image.*")) {
        updates.push(file);
      }
    }
    thumbs = $(this.el).find("#upload_list ul");
    _.each(updates, function(update) {
      var reader;
      reader = new FileReader();
      reader.onload = (function(update) {
        return function(event) {
          var item;
          item = new SubmitItemView().render(update, event.target.result);
          return $("#upload_list ul").append(item.el);
        };
      })(update);
      return reader.readAsDataURL(update);
    });
    return $("#upload").show();
  },
  upload: function(event) {
    var upload_button;
    this.undelegateEvents();
    upload_button = event.currentTarget;
    $(upload_button).find("span").html("uploading");
    $("#loader").show();
    return _.each($("#upload_list li"), function(item) {
      var $img, data, source, tags;
      tags = $(item).find(".tags").val();
      if ($(item).find("input[name=transparent]")[0].checked) {
        tags += ", transparent";
      }
      if ($(item).find("input[name=fanart]")[0].checked) {
        tags += ", fanart";
      }
      if ($(item).find("input[name=screenshot]")[0].checked) {
        tags += ", screenshot";
      }
      source = $(item).find(".source").val();
      $img = $(item).find("img");
      data = {
        image: {
          filename: $img.attr("title"),
          mime: $img.attr("data-type"),
          base64: $img.attr("src").split(/base64,/).slice(1).join()
        },
        tags: tags,
        source: source
      };
      return $.ajax({
        data: JSON.stringify(data),
        type: "POST",
        dataType: "json",
        url: "/api/v3/face/",
        contentType: "application/json; charset=utf-8",
        success: function() {
          $(item).remove();
          if ($("#upload_list ul").children().length === 0) {
            return app.navigate("/unreviewed/", true);
          }
        },
        error: function() {
          return $(item).find(".info").addClass("error").css("color", "black").css("background-color", "red").html("An error has ocurred with this image");
        }
      });
    });
  },
  toggleInstructions: function(event) {
    return $("#instructions div").toggle();
  },
  disableShortcuts: function(event) {
    return event.stopPropagation();
  }
});

window.SubmitItemView = Backbone.View.extend({
  tagName: "li",
  initialize: function() {
    return this.template = tpl.get("submitItem");
  },
  events: {
    "click .controls": "remove"
  },
  render: function(image, imageURL) {
    $(this.el).html(Mustache.render(this.template, {
      image: image,
      imageURL: imageURL
    }));
    $.get("/api/v3/detect/?filename=" + image.name, (function(_this) {
      return function(data) {
        $(_this.el).find(".tags").val(data.tags);
        return $(_this.el).find(".source").val(data.source);
      };
    })(this));
    return this;
  }
});
